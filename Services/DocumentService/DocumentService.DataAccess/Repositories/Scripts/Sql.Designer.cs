//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentService.DataAccess.Repositories.Scripts {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocumentService.DataAccess.Repositories.Scripts.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where id = @id);.
        /// </summary>
        internal static string IsUserExistsById
        {
            get
            {
                return ResourceManager.GetString("IsUserExistsById", resourceCulture);
            }
        }

        internal static string GetUsersByEmails
        {
            get
            {
                return ResourceManager.GetString("GetUsersByEmails", resourceCulture);
            }
        }

        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into document_participants (user_id, document_id, role)
        ///values (@UserId, @DocumentId, @Role);.
        /// </summary>
        internal static string CreateDocumentParticipant {
            get {
                return ResourceManager.GetString("CreateDocumentParticipant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into documents (name, creator_id)
        ///values (@Name, @CreatorId)
        ///returning id;.
        /// </summary>
        internal static string CreteDocument {
            get {
                return ResourceManager.GetString("CreteDocument", resourceCulture);
            }
        }

        internal static string CreateUser
        {
            get
            {
                return ResourceManager.GetString("CreateUser", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на DELETE FROM document_participants WHERE document_id = @id;
        ///DELETE FROM blocks WHERE document_id = @id;
        ///DELETE FROM documents WHERE id = @id;.
        /// </summary>
        internal static string DeleteDocument {
            get {
                return ResourceManager.GetString("DeleteDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DELETE FROM document_participants
        ///WHERE user_id = @userId AND document_id = @documentId;.
        /// </summary>
        internal static string DeleteDocumentParticipant {
            get {
                return ResourceManager.GetString("DeleteDocumentParticipant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id         as Id,
        ///       name       as Name,
        ///       creator_id as CreatorId
        ///from documents
        ///where id = @id;.
        /// </summary>
        internal static string GetDocumentById {
            get {
                return ResourceManager.GetString("GetDocumentById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select u.id       as UserId,
        ///       u.username as Username,
        ///       u.name     as Name,
        ///       u.surname  as Surname,
        ///       cp.document_id as DocumentId,
        ///       cp.role    as Role
        ///from document_participants cp
        ///         join users u on cp.user_id = u.id
        ///where cp.user_id = @userId
        ///  and cp.document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantFull {
            get {
                return ResourceManager.GetString("GetDocumentParticipantFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id as UserId,
        ///       document_id as DocumentId,
        ///       role    as Role
        ///from document_participants
        ///where document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantsByDocumentId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsByDocumentId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id as UserId,
        ///       document_id as DocumentId,
        ///       role    as Role
        ///from document_participants
        ///where user_id = @userId;.
        /// </summary>
        internal static string GetDocumentParticipantsByUserId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsByUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select u.id       as UserId,
        ///       u.username as Username,
        ///       u.name     as Name,
        ///       u.surname  as Surname,
        ///       cp.document_id as DocumentId,
        ///       cp.role    as Role
        ///from document_participants cp
        ///         join users u on cp.user_id = u.id
        ///where cp.document_id = @documentId;.
        /// </summary>
        internal static string GetDocumentParticipantsFullByDocumentId {
            get {
                return ResourceManager.GetString("GetDocumentParticipantsFullByDocumentId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select c.id         as Id,
        ///       c.name       as Name,
        ///       c.creator_id as CreatorId
        ///from documents c
        ///         join document_participants cp on c.id = cp.document_id
        ///where cp.user_id = @userId;.
        /// </summary>
        internal static string GetDocumentsByUserId {
            get {
                return ResourceManager.GetString("GetDocumentsByUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT role
        ///FROM document_participants
        ///WHERE user_id = @userId AND document_id = @documentId;
        ///.
        /// </summary>
        internal static string GetUserRoleInDocument {
            get {
                return ResourceManager.GetString("GetUserRoleInDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from documents
        ///              where id = @id);.
        /// </summary>
        internal static string IsDocumentExists {
            get {
                return ResourceManager.GetString("IsDocumentExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select user_id
        ///              from document_participants
        ///              where user_id = @userId
        ///                and document_id = @documentId);.
        /// </summary>
        internal static string IsDocumentParticipantExists {
            get {
                return ResourceManager.GetString("IsDocumentParticipantExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UPDATE documents
        ///SET name = @name
        ///WHERE id = @documentId
        ///.
        /// </summary>
        internal static string UpdateDocumentName {
            get {
                return ResourceManager.GetString("UpdateDocumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UPDATE document_participants
        ///SET role = @role
        ///WHERE user_id = @userId AND document_id = @documentId;.
        /// </summary>
        internal static string UpdateUserRoleInDocument {
            get {
                return ResourceManager.GetString("UpdateUserRoleInDocument", resourceCulture);
            }
        }
    }
}

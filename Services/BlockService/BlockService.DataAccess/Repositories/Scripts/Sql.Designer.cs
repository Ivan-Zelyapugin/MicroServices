//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlockService.DataAccess.Repositories.Scripts {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlockService.DataAccess.Repositories.Scripts.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select user_id
        ///              from document_participants
        ///              where user_id = @userId
        ///                and document_id = @documentId);.
        /// </summary>
        internal static string IsDocumentParticipantExists
        {
            get
            {
                return ResourceManager.GetString("IsDocumentParticipantExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from documents
        ///              where id = @id);.
        /// </summary>
        internal static string IsDocumentExists
        {
            get
            {
                return ResourceManager.GetString("IsDocumentExists", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на SELECT role
        ///FROM document_participants
        ///WHERE user_id = @userId AND document_id = @documentId;
        ///.
        /// </summary>
        internal static string GetUserRoleInDocument
        {
            get
            {
                return ResourceManager.GetString("GetUserRoleInDocument", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на select user_id as UserId,
        ///       document_id as DocumentId,
        ///       role    as Role
        ///from document_participants
        ///where user_id = @userId;.
        /// </summary>
        internal static string GetDocumentParticipantsByUserId
        {
            get
            {
                return ResourceManager.GetString("GetDocumentParticipantsByUserId", resourceCulture);
            }
        }

        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into blocks (text, sent_on, document_id, user_id)
        ///values (@Text, @SentOn, @DocumentId, @UserId)
        ///returning id;.
        /// </summary>
        internal static string CreateBlock {
            get {
                return ResourceManager.GetString("CreateBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на INSERT INTO block_images (block_id, url, uploaded_on, user_id)
        ///VALUES (@BlockId, @Url, @UploadedOn, @UserId)
        ///RETURNING id;.
        /// </summary>
        internal static string CreateBlockImage {
            get {
                return ResourceManager.GetString("CreateBlockImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from block_images
        ///where id = @Id;.
        /// </summary>
        internal static string DeleteImage {
            get {
                return ResourceManager.GetString("DeleteImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update blocks
        ///set text      = @editedText,
        ///    edited_on = @editedOn
        ///where id = @id;.
        /// </summary>
        internal static string EditBlock {
            get {
                return ResourceManager.GetString("EditBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id        as Id,
        ///       text      as Text,
        ///       sent_on   as SentOn,
        ///       document_id   as DocumentId,
        ///       user_id   as UserId,
        ///       edited_on as EditedOn
        ///from blocks
        ///where document_id = @documentId
        ///  and sent_on &gt;= @from
        ///order by sent_on;.
        /// </summary>
        internal static string GetBlockByDocument {
            get {
                return ResourceManager.GetString("GetBlockByDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id        as Id,
        ///       text      as Text,
        ///       sent_on   as SentOn,
        ///       document_id   as DocumentId,
        ///       user_id   as UserId,
        ///       edited_on as EditedOn
        ///from blocks
        ///where id = @id;.
        /// </summary>
        internal static string GetBlockById {
            get {
                return ResourceManager.GetString("GetBlockById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id          as Id,
        ///       block_id    as BlockId,
        ///       url         as Url,
        ///       uploaded_on as UploadedOn,
        ///       user_id     as UserId
        ///from block_images
        ///where id = @Id;.
        /// </summary>
        internal static string GetImageById {
            get {
                return ResourceManager.GetString("GetImageById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id          as Id,
        ///       block_id    as BlockId,
        ///       url         as Url,
        ///       uploaded_on as UploadedOn,
        ///       user_id     as UserId
        ///from block_images
        ///where block_id = @BlockId
        ///order by uploaded_on;.
        /// </summary>
        internal static string GetImagesByBlockId {
            get {
                return ResourceManager.GetString("GetImagesByBlockId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from blocks
        ///              where id = @id);.
        /// </summary>
        internal static string IsBlockExists {
            get {
                return ResourceManager.GetString("IsBlockExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from block_images
        ///              where id = @Id);.
        /// </summary>
        internal static string IsImageExists {
            get {
                return ResourceManager.GetString("IsImageExists", resourceCulture);
            }
        }
    }
}
